@using FinVue.Core.DataTransferObjects
@using FinVue.Core.Services
@using FinVue.Core.Entities
@using FinVue.Core.Enums
@using System.Globalization

@inject CategoryService CategoryService
@inject UserService UserService

<div class="">
    <h1 class="color-primary">Neue Transaktion</h1>
    
    @if (Rt is null) {
        <div class="inputs">
            <div>
                <div class="input">
                    <label for="fname" class="low-opac">Name</label>
                    <input id="fname" required />
                </div>
                <div class="input">
                    <label for="fpaydate" class="low-opac">Zahlungsdatum</label>
                    <input id="fpaydate" type="date" required />
                </div>
                <div class="input">
                    <label for="ftype" class="low-opac">Typ</label>
                    <select name="ftype" id="ftype" required>
                        @foreach (var type in Enum.GetValues(typeof(TransactionType))) {
                            <option value="@type">@type</option>
                        }
                    </select>
                </div>
            </div>
            <div>
                <div class="input">
                    <label for="fvalue" class="low-opac">Volumen</label>

                    <span class="currencyinput"><input id="fvalue" required />€</span>
                </div>
                <div class="input">
                    <label for="fpayinguser" class="low-opac">Betroffener Nutzer</label>
                    <select name="fpayinguser" id="fpayinguser">
                        @foreach (var user in Users) {
                            <option value="@user">@user.Username</option>
                        }
                    </select>
                </div>
                <div class="input">
                    <label for="fpaymethod" class="low-opac">Zahlungsmethode</label>
                    <select name="fpaymethod" id="fpaymethod" required>
                        @foreach (var method in Enum.GetValues(typeof(PaymentMethod))) {
                            <option value="@method">@method</option>
                        }
                    </select>
                </div>
            </div>

            <div class="input span-cols">
                <label for="fcategory" class="low-opac">Kategorie</label>
                <select name="fcategory" id="fcategory">
                    @foreach(var cat in Categories) {
                        <option style="color:#@(cat.CategoryColor.ToString())" value="@cat">@cat.Name</option>
                    }
                </select>
            </div>
        </div>
    } else {
        <div class="inputs">
            <div>
                <div class="input">
                    <label for="fname" class="low-opac">Name</label>
                    <input id="fname" class="low-opac" readonly value="@Rt.Name" />
                </div>
                <div class="input">
                    <label for="fpaydate" class="low-opac">Zahlungsdatum</label>
                    <input id="fpaydate" type="date" required value="@DateTime.Now.Date.ToString("yyyy-MM-dd")" />
                </div>
                <div class="input">
                    <label for="ftype" class="low-opac">Typ</label>
                    <input id="ftype" class="low-opac" readonly value="@Rt.Type" />
                </div>
            </div>
            <div>
                <div class="input">
                    <label for="fvalue" class="low-opac">Volumen</label>
                    <input id="fvalue" required value="@Rt.ValueInCent" />
                </div>
                <div class="input">
                    <label for="fpayinguser" class="low-opac">Betroffener Nutzer</label>
                    <input id="fpayinguser" class="low-opac" readonly />
                </div>
                <div class="input">
                    <label for="fpaymethod" class="low-opac">Zahlungsmethode</label>
                    <input id="fpaymethod" class="low-opac" readonly value="@PaymentMethod.Überweisung" />
                </div>
            </div>

            <div class="input span-cols">
                <label for="fcategory" class="low-opac">Kategorie</label>
                <input id="fcategory" class="low-opac" readonly value="@Rt.Category?.Name" />
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public RecurringTransactionDto? Rt { get; set; }

    public List<Category> Categories{ get; set; }
    public List<User> Users { get; set; }

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        InitializeDropdowns();
    }

    private async void InitializeDropdowns() {
        Users = await UserService.GetAllUsersAsync();
        Categories = await CategoryService.GetAllCategoriesAsync();
    }
}